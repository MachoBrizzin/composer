<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="nodeImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="nodeImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACo
        CwAAAk1TRnQBSQFMAgEBAgEAAUABAAFAAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBIAA1EBoAGkAV0BLAH/AaQBXQEsAf8BpAFdASwB/wGkAV0BLAH/AaQBXQEs
        Af8BpAFdASwB/wGkAV0BLAH/AaQBXQEsAf8BpAFdASwB/wGkAV0BLAH/AaQBXQEsAf8BpAFdASwB/wGk
        AV0BLAH/AXEBYgFSAekDJgE5BAABSQJKAYkBTgFiAV0B6QEeAV8BTwH8ATMBaAFUAfcBWQJdAdcBTwJT
        AaUDNwFbAyEBMAFZAWABXAHUAR4BWAFQAf0BMwFpAVUB9wE5AWUBVAH0AVkCWwHDAUUCRgF/AyQBNoAA
        A1wB4AGXAYYBcAH/AaUBYQEyAf8BugGDAUgB/wG6AYMBSAH/AboBgwFIAf8BugGDAUgB/wG6AYMBSAH/
        AboBgwFIAf8BugGDAUgB/wG6AYMBSAH/AboBgwFIAf8BugGDAUgB/wG6AYMBSAH/AbIBcAE9Af8CWgFY
        AcABRwJIAYMBOQJlAfQBHgGmAZMB/wEhAa8BnAH/ASABqwGYAf8BHQGfAY0B/wEZAZIBgQH/ARYBZgFZ
        Af4BVgFhAVwB3AEpAYcBfwH+ATgBuAGnAf8BOgG5AagB/wEzAbEBoQH/ASUBnwGOAf8BKQF7AXMB+gEe
        AV4BTQH8gAADXQHgA5kB/wGlAWABMQH/AdMBpgF2Af8B0gGjAXAB/wHSAaMBcAH/AdIBowFwAf8B0gGj
        AXAB/wHSAaMBcAH/AdIBowFwAf8B0gGjAXAB/wHSAaMBcAH/AdIBowFwAf8B0wGkAXEB/wHRAaUBcgH/
        AYQBWQFCAfUBVgJZAb4BGwGXAYYB/wE4AbkBqAH/AUkBvwGvAf8BNwG4AacB/wEjAbEBngH/AScBsgGg
        Af8BIAFgAVEB/AFDAWQBYAHxAT0BsAGhAf8BUQHCAbMB/wFNAcABsQH/AToBugGoAf8BLwG1AaMB/wE0
        AbcBpQH/AQ4BXgFRAf+AAANbAeIDmwH/AaQBXwEwAf8B1QGrAYUB/wHOAZwBZgH/Ac4BnAFlAf8BzgGc
        AWUB/wHOAZwBZQH/Ac4BnAFlAf8BzgGcAWUB/wHOAZwBZQH/Ac4BnAFlAf8BzgGcAWUB/wHPAZ4BaAH/
        AdUBqwGEAf8BkQFcAT4B+AM3AVoBMwFiAVkB9QFkAboBrwH/AacB3gHWAf8BjgHVAcsB/wFTAcIBtAH/
        AS8BtQGjAf8BIAFZAVAB/QNCAXYBPwFmAWUB9AGcAdAByQH/AbYB4QHbAf8BnwHYAdAB/wFgAcUBtwH/
        ATwBugGpAf8BHgFYAVAB/YAAA1oB5AOhAf8BpQFgATAB/wHiAcQBqQH/AdUBqAGBAf8B0wGkAXIB/wHT
        AaQBcgH/AdMBpAFyAf8B0wGkAXIB/wHTAaQBcgH/AdMBpAFyAf8B0wGkAXIB/wHTAaQBcgH/AdQBpwF2
        Af8B3QG6AZwB/wGNAWYBQQH5BAADLwFKAVkCWwHEASMCXwH7ASsBbQFhAfwBJwFqAV8B+QE0AbUBpAH/
        ASABWgFRAf0DBAEFAy0BRgFZAlwBzAFKAWMBYQHuAUcBaQFkAfEBJgFqAV0B+QFDAbwBrAH/AR4BXwFP
        AfyAAANeAeUBpAKlAf8BpQFfAS8B/wHpAdIBvgH/Ad0BugGbAf8B3QG5AZkB/wHcAbYBlQH/AdsBtQGS
        Af8B2gGzAZAB/wHZAbIBjgH/AdgBrgGJAf8B1wGtAYcB/wHXAa0BhwH/AdgBsAGLAf8B5QHJAbEB/wGT
        AVcBPQH6FAABMwFoAVQB9wE6AbUBpQH/ARgBaAFbAf4DAwEEEAABIQFfAVoB+wFJAb0BrgH/ASEBXwFa
        AfuAAANcAecDqQH/AaQBXgEuAf8B7AHYAcYB/wHdAboBmQH/Ad0BugGZAf8B3QG6AZkB/wHdAboBmQH/
        Ad0BugGZAf8B3QG6AZkB/wHdAboBmQH/AdwBtwGVAf8B2gGyAY4B/wHZAbABiwH/AecBzwG4Af8BlAFf
        ATIB+xQAATMBaAFUAfcBPgG3AacB/wEYAWcBWgH+AwEBAhAAASEBXwFaAfsBTgG/AbAB/wEiAVwBUAH6
        gAADWwHpA64B/wGlAV8BLgH/AesB1wHEAf8B3AG3AZQB/wHcAbcBlAH/AdwBtwGUAf8B3AG3AZQB/wHc
        AbcBlAH/AdwBtwGUAf8B3AG3AZQB/wHcAbcBlAH/AdwBtwGUAf8B2gG0AZEB/wHmAc0BtgH/AY4BXgEu
        AfwUAAEzAWgBVAH3AUIBuAGpAf8BDwFfAVIB/wMAAQEQAAEhAV8BWgH7AVIBwQGyAf8BIgFcAVAB+oAA
        A18B6QOzAf8BpAFeAS0B/wHqAdUBwQH/AdsBtAGRAf8B2wG0AZEB/wHbAbUBkQH/AdsBtQGRAf8B2wG1
        AZIB/wHbAbUBkgH/AdsBtQGSAf8B2wG1AZIB/wHbAbUBkgH/AdwBuAGWAf8B5wHPAbcB/wGkAVcBPAH9
        FAABMwFoAVQB9wFEAbkBqgH/AQ4BXgFRAf8DFgEeAxIBGAMPARQDCwEPAwcBCgEhAV8BWgH7AVUBwgG0
        Af8BJgFqAV0B+YAAA2AB6wO3Af8BpQFeAS0B/wHqAdMBvgH/AeoB1AG/Af8B6gHUAb8B/wHqAdQBvgH/
        AeoB1AG+Af8B6gHUAb4B/wHpAdMBvgH/AekB0wG+Af8B6QHTAb4B/wHpAdMBvgH/AekB0wG+Af8B6AHP
        AbgB/wGWAWUBNAH+FAABMwFoAVQB9wFFAbkBqgH/ATsBawFfAfMBOQFlAV4B9AEzAV4BWQH1ATMBaQFV
        AfcBLAJcAfgBIgFaAVAB+gExAWIBYAH2AVYBwwG1Af8BLwFdAVwB+IAAA2QB7AO9Af8BpgFlATkB/wGl
        AV4BLgH/AaUBXgEuAf8BpQFeAS4B/wGlAV4BLgH/AaUBXgEuAf8BpAFeAS0B/wGkAV4BLQH/AaQBXgEt
        Af8BpAFeAS0B/wGkAV0BLAH/AaQBXQEsAf8BpAFdASwB/wFpAV8BWgHgFAABMwFoAVQB9wFPAb0BrwH/
        AWEByAG6Af8BdAHOAcMB/wGNAdUBywH/AZwB2wHSAf8BnwHbAdMB/wGUAdcBzgH/AYUB0gHHAf8BbAHM
        AcAB/wE2AWwBYAH3gAADYQHuAcACwQH/A6wB/wOqAf8DpwH/A6UB/wOkAf8DpAH/A6wB/wO2Af8DuQH/
        A7sB/wOiAf8DUgGpHAABMwFoAVQB9wFvAcoBvwH/AYkB0wHJAf8BpwHfAdcB/wHFAeoB5AH/Ad8B8wHw
        Af8B7AH4AfYB/wHZAfEB7gH/AbwB5gHhAf8BsgHiAdwB/wEzAWIBYAH2gAADYwHvA8UB/wOwAf8DrQH/
        A6sB/wOqAf8DrAH/A3cB9QN3AfIDdQHyA3UB8gN1AfIDbgH2A0gBhBwAATMBaAFUAfcBUgG0AacB/wGA
        AccBvQH/AZsB0wHLAf8BrgHcAdYB/wG6AeEB2wH/Ab0B4wHdAf8BtgHgAdoB/wGmAdkB0gH/AY4B0AHG
        Af8BNgFtAWAB94AAA2YB8APJAf8DxwH/A8UB/wPEAf8DxAH/A7QB/wNdAcoDJgE4AyYBOAMmATgDJgE4
        AyQBNQMCAQMcAANRAaABWQJdAdIBWQFgAVwB1AFZAl0B1wFYAl4B2AFZAWEBXgHaAVcCXgHdAVQBXQFc
        Ad8BVwFgAV8B4AFTAV8BXQHjAVoBXgFcAc6AAANRAZ8DZgHsA2YB7ANmAewDZgHsA2YB7ANiAeIDJAE1
        /wDhAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AwABgB8AAYAHAAH4AXgGAAH4
        AXgGAAH4AXgGAAH4BwAB+AcAAfgGAAEDAfgGAAEDAfgGAAEDAfgGAAP/BAAE/wQACw==
</value>
  </data>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>136, 17</value>
  </metadata>
</root>