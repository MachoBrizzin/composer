<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="nodeImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="nodeImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC4
        CwAAAk1TRnQBSQFMAgEBAgEAASgBAAEoAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBIAA1EBoAGkAWABLwH/AaQBYAEvAf8BpAFgAS8B/wGkAWABLwH/AaQBYAEv
        Af8BpAFgAS8B/wGkAWABLwH/AaQBYAEvAf8BpAFgAS8B/wGkAWABLwH/AaQBYAEvAf8BpAFgAS8B/wGk
        AWABLwH/AX0BYgFOAekDJgE5BAABSQJKAYkBQgFiAV0B6QEbAWIBVQH8ASkBaAFXAfcBTwFgAV0B1wFP
        AlMBpQM3AVsDIQEwAVEBYAFcAdQBGwFeAVMB/QEpAWkBWAH3AS4BZQFXAfQBVQJbAcMBRQJGAX8DJAE2
        gAADWQHgAZcBhgFzAf8BpQFkATUB/wG6AYMBSwH/AboBgwFLAf8BugGDAUsB/wG6AYMBSwH/AboBgwFL
        Af8BugGDAUsB/wG6AYMBSwH/AboBgwFLAf8BugGDAUsB/wG6AYMBSwH/AboBgwFLAf8BsgFzAUAB/wFe
        AVoBVwHAAUcCSAGDAS4BZwFlAfQBIQGmAZMB/wEkAa8BnAH/ASMBqwGYAf8BIAGfAY0B/wEcAZIBgQH/
        ARYBZgFZAf4BTQFhAVwB3AEpAY0BfwH+ATsBuAGnAf8BPQG5AagB/wE2AbEBoQH/ASgBnwGOAf8BKQF+
        AXYB+gEbAWEBUwH8gAADWgHgA5kB/wGlAWMBNAH/AdMBpgF5Af8B0gGjAXMB/wHSAaMBcwH/AdIBowFz
        Af8B0gGjAXMB/wHSAaMBcwH/AdIBowFzAf8B0gGjAXMB/wHSAaMBcwH/AdIBowFzAf8B0wGkAXQB/wHR
        AaUBdQH/AY0BXQFCAfUBVAFaAVkBvgEeAZcBhgH/ATsBuQGoAf8BTAG/Aa8B/wE6AbgBpwH/ASYBsQGe
        Af8BKgGyAaAB/wEdAWMBVgH8ATYBZAFgAfEBQAGwAaEB/wFUAcIBswH/AVABwAGxAf8BPQG6AagB/wEy
        AbUBowH/ATcBtwGlAf8BEQFhAVQB/4AAA1cB4gObAf8BpAFiATMB/wHVAasBhQH/Ac4BnAFpAf8BzgGc
        AWgB/wHOAZwBaAH/Ac4BnAFoAf8BzgGcAWgB/wHOAZwBaAH/Ac4BnAFoAf8BzgGcAWgB/wHOAZwBaAH/
        Ac8BngFrAf8B1QGrAYQB/wGXAV0BPAH4AzcBWgEtAWcBWQH1AWcBugGvAf8BpwHeAdYB/wGOAdUBywH/
        AVYBwgG0Af8BMgG1AaMB/wEdAV8BUwH9A0IBdgE5AWwBZQH0AZwB0AHJAf8BtgHhAdsB/wGfAdgB0AH/
        AWMBxQG3Af8BPwG6AakB/wEbAV4BUwH9gAADVgHkA6EB/wGlAWMBMwH/AeIBxAGpAf8B1QGoAYEB/wHT
        AaQBdQH/AdMBpAF1Af8B0wGkAXUB/wHTAaQBdQH/AdMBpAF1Af8B0wGkAXUB/wHTAaQBdQH/AdMBpAF1
        Af8B1AGnAXkB/wHdAboBnAH/AZIBZgE/AfkEAAMvAUoBVAJbAcQBIwFiAV8B+wErAXABZAH8ASQBagFf
        AfkBNwG1AaQB/wEdAWABVAH9AwQBBQMtAUYBUgJcAcwBQgFpAWEB7gFBAW4BZAHxASMBagFdAfkBRgG8
        AawB/wEbAWIBVQH8gAADWQHlAaQCpQH/AaUBYgEyAf8B6QHSAb4B/wHdAboBmwH/Ad0BuQGZAf8B3AG2
        AZUB/wHbAbUBkgH/AdoBswGQAf8B2QGyAY4B/wHYAa4BiQH/AdcBrQGHAf8B1wGtAYcB/wHYAbABiwH/
        AeUByQGxAf8BmwFdAToB+hQAASkBaAFXAfcBPQG1AaUB/wEYAWgBWwH+AwMBBBAAASABXwFaAfsBTAG9
        Aa4B/wEgAV8BWgH7gAADXAHnA6kB/wGkAWEBMQH/AewB2AHGAf8B3QG6AZkB/wHdAboBmQH/Ad0BugGZ
        Af8B3QG6AZkB/wHdAboBmQH/Ad0BugGZAf8B3QG6AZkB/wHcAbcBlQH/AdoBsgGOAf8B2QGwAYsB/wHn
        Ac8BuAH/AZgBXwEyAfsUAAEpAWgBVwH3AUEBtwGnAf8BGAFnAVoB/gMBAQIQAAEgAV8BWgH7AVEBvwGw
        Af8BHwFiAVMB+oAAA1sB6QOuAf8BpQFiATEB/wHrAdcBxAH/AdwBtwGUAf8B3AG3AZQB/wHcAbcBlAH/
        AdwBtwGUAf8B3AG3AZQB/wHcAbcBlAH/AdwBtwGUAf8B3AG3AZQB/wHcAbcBlAH/AdoBtAGRAf8B5gHN
        AbYB/wGXAWEBMQH8FAABKQFoAVcB9wFFAbgBqQH/ARIBYgFVAf8DAAEBEAABIAFfAVoB+wFVAcEBsgH/
        AR8BYgFTAfqAAANfAekDswH/AaQBYQEwAf8B6gHVAcEB/wHbAbQBkQH/AdsBtAGRAf8B2wG1AZEB/wHb
        AbUBkQH/AdsBtQGSAf8B2wG1AZIB/wHbAbUBkgH/AdsBtQGSAf8B2wG1AZIB/wHcAbgBlgH/AecBzwG3
        Af8BpAFdATkB/RQAASkBaAFXAfcBRwG5AaoB/wERAWEBVAH/AxYBHgMSARgDDwEUAwsBDwMHAQoBIAFf
        AVoB+wFYAcIBtAH/ASMBagFdAfmAAANgAesDtwH/AaUBYQEwAf8B6gHTAb4B/wHqAdQBvwH/AeoB1AG/
        Af8B6gHUAb4B/wHqAdQBvgH/AeoB1AG+Af8B6QHTAb4B/wHpAdMBvgH/AekB0wG+Af8B6QHTAb4B/wHp
        AdMBvgH/AegBzwG4Af8BnAFlATQB/hQAASkBaAFXAfcBSAG5AaoB/wEyAW4BXwHzAS4BZQFeAfQBLQFk
        AVkB9QEpAWkBWAH3ASQBYAFcAfgBHwFgAVMB+gErAWIBYAH2AVkBwwG1Af8BJgFiAVwB+IAAA2QB7AO9
        Af8BpgFoATwB/wGlAWEBMQH/AaUBYQExAf8BpQFhATEB/wGlAWEBMQH/AaUBYQExAf8BpAFhATAB/wGk
        AWEBMAH/AaQBYQEwAf8BpAFhATAB/wGkAWABLwH/AaQBYAEvAf8BpAFgAS8B/wF1AWIBVAHgFAABKQFo
        AVcB9wFSAb0BrwH/AWQByAG6Af8BdwHOAcMB/wGNAdUBywH/AZwB2wHSAf8BnwHbAdMB/wGUAdcBzgH/
        AYUB0gHHAf8BbwHMAcAB/wEwAWwBYAH3gAADZQHuAcACwQH/A6wB/wOqAf8DpwH/A6UB/wOkAf8DpAH/
        A6wB/wO2Af8DuQH/A7sB/wOiAf8DUgGpHAABKQFoAVcB9wFyAcoBvwH/AYkB0wHJAf8BpwHfAdcB/wHF
        AeoB5AH/Ad8B8wHwAf8B7AH4AfYB/wHZAfEB7gH/AbwB5gHhAf8BsgHiAdwB/wEvAWIBYAH2gAADZgHv
        A8UB/wOwAf8DrQH/A6sB/wOqAf8DrAH/A4AB9QN9AfIDewHyA3sB8gN7AfIDdQH2A0gBhBwAASkBaAFX
        AfcBVQG0AacB/wGAAccBvQH/AZsB0wHLAf8BrgHcAdYB/wG6AeEB2wH/Ab0B4wHdAf8BtgHgAdoB/wGm
        AdkB0gH/AY4B0AHGAf8BMQFtAWAB94AAA2kB8APJAf8DxwH/A8UB/wPEAf8DxAH/A7QB/wNdAcoDJgE4
        AyYBOAMmATgDJgE4AyQBNQMCAQMcAANRAaABUgJdAdIBUQFgAVwB1AFPAV8BXQHXAVACXgHYAU8BYQFe
        AdoBTQFiAV4B3QFKAWABXAHfAUwBYwFfAeABSQFiAV0B4wFVAV4BXAHOgAADUQGfA2wB7ANsAewDbAHs
        A2wB7ANsAewDZgHiAyQBNf8A4QABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wMA
        AYAfAAGABwAB+AF4BgAB+AF4BgAB+AF4BgAB+AcAAfgHAAH4BgABAwH4BgABAwH4BgABAwH4BgAD/wQA
        BP8EAAs=
</value>
  </data>
</root>