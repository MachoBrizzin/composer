<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="nodeImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="nodeImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACu
        CwAAAk1TRnQBSQFMAgEBAgEAATgBAAE4AQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBIAA1EBoAGkAV4BLQH/AaQBXgEtAf8BpAFeAS0B/wGkAV4BLQH/AaQBXgEt
        Af8BpAFeAS0B/wGkAV4BLQH/AaQBXgEtAf8BpAFeAS0B/wGkAV4BLQH/AaQBXgEtAf8BpAFeAS0B/wGk
        AV4BLQH/AXUBYgFRAekDJgE5BAABSQJKAYkBSgFiAV0B6QEdAWABUQH8ATEBaAFVAfcBVgFeAV0B1wFP
        AlMBpQM3AVsDIQEwAVgBYAFcAdQBHQFaAVEB/QExAWkBVgH3ATUBZQFVAfQBWAJbAcMBRQJGAX8DJAE2
        gAADWwHgAZcBhgFxAf8BpQFiATMB/wG6AYMBSQH/AboBgwFJAf8BugGDAUkB/wG6AYMBSQH/AboBgwFJ
        Af8BugGDAUkB/wG6AYMBSQH/AboBgwFJAf8BugGDAUkB/wG6AYMBSQH/AboBgwFJAf8BsgFxAT4B/wJa
        AVgBwAFHAkgBgwE1AmUB9AEfAaYBkwH/ASIBrwGcAf8BIQGrAZgB/wEeAZ8BjQH/ARoBkgGBAf8BFgFm
        AVkB/gFVAWEBXAHcASkBiQF/Af4BOQG4AacB/wE7AbkBqAH/ATQBsQGhAf8BJgGfAY4B/wEpAXwBdAH6
        AR0BXwFPAfyAAANcAeADmQH/AaUBYQEyAf8B0wGmAXcB/wHSAaMBcQH/AdIBowFxAf8B0gGjAXEB/wHS
        AaMBcQH/AdIBowFxAf8B0gGjAXEB/wHSAaMBcQH/AdIBowFxAf8B0gGjAXEB/wHTAaQBcgH/AdEBpQFz
        Af8BhgFZAUIB9QFWAlkBvgEcAZcBhgH/ATkBuQGoAf8BSgG/Aa8B/wE4AbgBpwH/ASQBsQGeAf8BKAGy
        AaAB/wEfAWEBUwH8AT8BZAFgAfEBPgGwAaEB/wFSAcIBswH/AU4BwAGxAf8BOwG6AagB/wEwAbUBowH/
        ATUBtwGlAf8BDwFfAVIB/4AAA1oB4gObAf8BpAFgATEB/wHVAasBhQH/Ac4BnAFnAf8BzgGcAWYB/wHO
        AZwBZgH/Ac4BnAFmAf8BzgGcAWYB/wHOAZwBZgH/Ac4BnAFmAf8BzgGcAWYB/wHOAZwBZgH/Ac8BngFp
        Af8B1QGrAYQB/wGTAVwBPgH4AzcBWgExAWQBWQH1AWUBugGvAf8BpwHeAdYB/wGOAdUBywH/AVQBwgG0
        Af8BMAG1AaMB/wEfAVsBUQH9A0IBdgE+AWcBZQH0AZwB0AHJAf8BtgHhAdsB/wGfAdgB0AH/AWEBxQG3
        Af8BPQG6AakB/wEdAVoBUQH9gAADWQHkA6EB/wGlAWEBMQH/AeIBxAGpAf8B1QGoAYEB/wHTAaQBcwH/
        AdMBpAFzAf8B0wGkAXMB/wHTAaQBcwH/AdMBpAFzAf8B0wGkAXMB/wHTAaQBcwH/AdMBpAFzAf8B1AGn
        AXcB/wHdAboBnAH/AY4BZgFBAfkEAAMvAUoBWAJbAcQBIwJfAfsBKwFuAWIB/AEmAWoBXwH5ATUBtQGk
        Af8BHwFcAVIB/QMEAQUDLQFGAVgCXAHMAUgBZQFhAe4BRQFrAWQB8QElAWoBXQH5AUQBvAGsAf8BHQFg
        AVEB/IAAA10B5QGkAqUB/wGlAWABMAH/AekB0gG+Af8B3QG6AZsB/wHdAbkBmQH/AdwBtgGVAf8B2wG1
        AZIB/wHaAbMBkAH/AdkBsgGOAf8B2AGuAYkB/wHXAa0BhwH/AdcBrQGHAf8B2AGwAYsB/wHlAckBsQH/
        AZYBWQE8AfoUAAExAWgBVQH3ATsBtQGlAf8BGAFoAVsB/gMDAQQQAAEhAV8BWgH7AUoBvQGuAf8BIQFf
        AVoB+4AAA1wB5wOpAf8BpAFfAS8B/wHsAdgBxgH/Ad0BugGZAf8B3QG6AZkB/wHdAboBmQH/Ad0BugGZ
        Af8B3QG6AZkB/wHdAboBmQH/Ad0BugGZAf8B3AG3AZUB/wHaAbIBjgH/AdkBsAGLAf8B5wHPAbgB/wGV
        AV8BMgH7FAABMQFoAVUB9wE/AbcBpwH/ARgBZwFaAf4DAQECEAABIQFfAVoB+wFPAb8BsAH/ASEBXgFR
        AfqAAANbAekDrgH/AaUBYAEvAf8B6wHXAcQB/wHcAbcBlAH/AdwBtwGUAf8B3AG3AZQB/wHcAbcBlAH/
        AdwBtwGUAf8B3AG3AZQB/wHcAbcBlAH/AdwBtwGUAf8B3AG3AZQB/wHaAbQBkQH/AeYBzQG2Af8BkQFf
        AS8B/BQAATEBaAFVAfcBQwG4AakB/wEQAWABUwH/AwABARAAASEBXwFaAfsBUwHBAbIB/wEhAV4BUQH6
        gAADXwHpA7MB/wGkAV8BLgH/AeoB1QHBAf8B2wG0AZEB/wHbAbQBkQH/AdsBtQGRAf8B2wG1AZEB/wHb
        AbUBkgH/AdsBtQGSAf8B2wG1AZIB/wHbAbUBkgH/AdsBtQGSAf8B3AG4AZYB/wHnAc8BtwH/AaQBWQE7
        Af0UAAExAWgBVQH3AUUBuQGqAf8BDwFfAVIB/wMWAR4DEgEYAw8BFAMLAQ8DBwEKASEBXwFaAfsBVgHC
        AbQB/wElAWoBXQH5gAADYAHrA7cB/wGlAV8BLgH/AeoB0wG+Af8B6gHUAb8B/wHqAdQBvwH/AeoB1AG+
        Af8B6gHUAb4B/wHqAdQBvgH/AekB0wG+Af8B6QHTAb4B/wHpAdMBvgH/AekB0wG+Af8B6QHTAb4B/wHo
        Ac8BuAH/AZgBZQE0Af4UAAExAWgBVQH3AUYBuQGqAf8BOQFsAV8B8wE1AWUBXgH0ATEBYAFZAfUBMQFp
        AVYB9wEpAV0BXAH4ASEBXAFRAfoBMAFiAWAB9gFXAcMBtQH/ASwBXgFcAfiAAANkAewDvQH/AaYBZgE6
        Af8BpQFfAS8B/wGlAV8BLwH/AaUBXwEvAf8BpQFfAS8B/wGlAV8BLwH/AaQBXwEuAf8BpAFfAS4B/wGk
        AV8BLgH/AaQBXwEuAf8BpAFeAS0B/wGkAV4BLQH/AaQBXgEtAf8BbAFgAVkB4BQAATEBaAFVAfcBUAG9
        Aa8B/wFiAcgBugH/AXUBzgHDAf8BjQHVAcsB/wGcAdsB0gH/AZ8B2wHTAf8BlAHXAc4B/wGFAdIBxwH/
        AW0BzAHAAf8BNQFsAWAB94AAA2EB7gHAAsEB/wOsAf8DqgH/A6cB/wOlAf8DpAH/A6QB/wOsAf8DtgH/
        A7kB/wO7Af8DogH/A1IBqRwAATEBaAFVAfcBcAHKAb8B/wGJAdMByQH/AacB3wHXAf8BxQHqAeQB/wHf
        AfMB8AH/AewB+AH2Af8B2QHxAe4B/wG8AeYB4QH/AbIB4gHcAf8BMgFiAWAB9oAAA2QB7wPFAf8DsAH/
        A60B/wOrAf8DqgH/A6wB/wN7AfUDeQHyA3cB8gN3AfIDdwHyA3EB9gNIAYQcAAExAWgBVQH3AVMBtAGn
        Af8BgAHHAb0B/wGbAdMBywH/Aa4B3AHWAf8BugHhAdsB/wG9AeMB3QH/AbYB4AHaAf8BpgHZAdIB/wGO
        AdABxgH/ATUBbQFgAfeAAANnAfADyQH/A8cB/wPFAf8DxAH/A8QB/wO0Af8DXQHKAyYBOAMmATgDJgE4
        AyYBOAMkATUDAgEDHAADUQGgAVgCXQHSAVgBYAFcAdQBVgJdAdcBVgJeAdgBVwFhAV4B2gFUAV8BXgHd
        AVEBXgFcAd8BVAFhAV8B4AFRAV8BXQHjAVkBXgFcAc6AAANRAZ8DaAHsA2gB7ANoAewDaAHsA2gB7ANj
        AeIDJAE1/wDhAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AwABgB8AAYAHAAH4
        AXgGAAH4AXgGAAH4AXgGAAH4BwAB+AcAAfgGAAEDAfgGAAEDAfgGAAEDAfgGAAP/BAAE/wQACw==
</value>
  </data>
</root>