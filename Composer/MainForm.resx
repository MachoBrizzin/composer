<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="nodeImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="nodeImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACa
        CwAAAk1TRnQBSQFMAgEBAgEAAVgBAAFYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBIAA1EBoAGkAVoBKQH/AaQBWgEpAf8BpAFaASkB/wGkAVoBKQH/AaQBWgEp
        Af8BpAFaASkB/wGkAVoBKQH/AaQBWgEpAf8BpAFaASkB/wGkAVoBKQH/AaQBWgEpAf8BpAFaASkB/wGk
        AVoBKQH/AWkBYgFYAekDJgE5BAABSQJKAYkBUgFiAV0B6QEhAVwBSQH8ATcBaAFSAfcBWQJdAdcBTwJT
        AaUDNwFbAyEBMAFcAWABXAHUASEBUwFNAf0BNwFpAVIB9wE/AWUBUgH0AVkCWwHDAUUCRgF/AyQBNoAA
        A18B4AGXAYYBbQH/AaUBXgEvAf8BugGDAUUB/wG6AYMBRQH/AboBgwFFAf8BugGDAUUB/wG6AYMBRQH/
        AboBgwFFAf8BugGDAUUB/wG6AYMBRQH/AboBgwFFAf8BugGDAUUB/wG6AYMBRQH/AbIBbQE6Af8CWgFY
        AcABRwJIAYMBPwJlAfQBGwGmAZMB/wEeAa8BnAH/AR0BqwGYAf8BGgGfAY0B/wEWAZIBgQH/ARYBZgFZ
        Af4BWgFhAVwB3AEpAYEBfwH+ATUBuAGnAf8BNwG5AagB/wEwAbEBoQH/ASIBnwGOAf8BKQF4AXAB+gEh
        AVsBRwH8gAADXwHgA5kB/wGlAV0BLgH/AdMBpgFzAf8B0gGjAW0B/wHSAaMBbQH/AdIBowFtAf8B0gGj
        AW0B/wHSAaMBbQH/AdIBowFtAf8B0gGjAW0B/wHSAaMBbQH/AdIBowFtAf8B0wGkAW4B/wHRAaUBbwH/
        AX4BWQFCAfUBVgJZAb4BGAGXAYYB/wE1AbkBqAH/AUYBvwGvAf8BNAG4AacB/wEgAbEBngH/ASQBsgGg
        Af8BIwFdAUsB/AFJAWQBYAHxAToBsAGhAf8BTgHCAbMB/wFKAcABsQH/ATcBugGoAf8BLAG1AaMB/wEx
        AbcBpQH/AQsBWwFOAf+AAANdAeIDmwH/AaQBXAEtAf8B1QGrAYUB/wHOAZwBYwH/Ac4BnAFiAf8BzgGc
        AWIB/wHOAZwBYgH/Ac4BnAFiAf8BzgGcAWIB/wHOAZwBYgH/Ac4BnAFiAf8BzgGcAWIB/wHPAZ4BZQH/
        AdUBqwGEAf8BiAFcAT4B+AM3AVoBOwFcAVkB9QFhAboBrwH/AacB3gHWAf8BjgHVAcsB/wFQAcIBtAH/
        ASwBtQGjAf8BIwFUAU0B/QNCAXYBQgJlAfQBnAHQAckB/wG2AeEB2wH/AZ8B2AHQAf8BXQHFAbcB/wE5
        AboBqQH/ASEBUwFNAf2AAANaAeQDoQH/AaUBXQEtAf8B4gHEAakB/wHVAagBgQH/AdMBpAFvAf8B0wGk
        AW8B/wHTAaQBbwH/AdMBpAFvAf8B0wGkAW8B/wHTAaQBbwH/AdMBpAFvAf8B0wGkAW8B/wHUAacBcwH/
        Ad0BugGcAf8BigFmAUEB+QQAAy8BSgFZAlsBxAEjAl8B+wErAWoBXgH8ASoBagFfAfkBMQG1AaQB/wEj
        AVQBTgH9AwQBBQMtAUYBWQJcAcwBUQJhAe4BTwJkAfEBKQFqAV0B+QFAAbwBrAH/ASEBXAFJAfyAAANe
        AeUBpAKlAf8BpQFcASwB/wHpAdIBvgH/Ad0BugGbAf8B3QG5AZkB/wHcAbYBlQH/AdsBtQGSAf8B2gGz
        AZAB/wHZAbIBjgH/AdgBrgGJAf8B1wGtAYcB/wHXAa0BhwH/AdgBsAGLAf8B5QHJAbEB/wGKAVIBQAH6
        FAABNwFoAVIB9wE3AbUBpQH/ARgBaAFbAf4DAwEEEAABIQFfAVoB+wFGAb0BrgH/ASEBXwFaAfuAAANc
        AecDqQH/AaQBWwErAf8B7AHYAcYB/wHdAboBmQH/Ad0BugGZAf8B3QG6AZkB/wHdAboBmQH/Ad0BugGZ
        Af8B3QG6AZkB/wHdAboBmQH/AdwBtwGVAf8B2gGyAY4B/wHZAbABiwH/AecBzwG4Af8BkQFfATIB+xQA
        ATcBaAFSAfcBOwG3AacB/wEYAWcBWgH+AwEBAhAAASEBXwFaAfsBSwG/AbAB/wElAVYBTQH6gAADWwHp
        A64B/wGlAVwBKwH/AesB1wHEAf8B3AG3AZQB/wHcAbcBlAH/AdwBtwGUAf8B3AG3AZQB/wHcAbcBlAH/
        AdwBtwGUAf8B3AG3AZQB/wHcAbcBlAH/AdwBtwGUAf8B2gG0AZEB/wHmAc0BtgH/AYUBWwErAfwUAAE3
        AWgBUgH3AT8BuAGpAf8BDAFcAU8B/wMAAQEQAAEhAV8BWgH7AU8BwQGyAf8BJQFWAU0B+oAAA18B6QOz
        Af8BpAFbASoB/wHqAdUBwQH/AdsBtAGRAf8B2wG0AZEB/wHbAbUBkQH/AdsBtQGRAf8B2wG1AZIB/wHb
        AbUBkgH/AdsBtQGSAf8B2wG1AZIB/wHbAbUBkgH/AdwBuAGWAf8B5wHPAbcB/wGkAVMBPwH9FAABNwFo
        AVIB9wFBAbkBqgH/AQsBWwFOAf8DFgEeAxIBGAMPARQDCwEPAwcBCgEhAV8BWgH7AVIBwgG0Af8BKQFq
        AV0B+YAAA2AB6wO3Af8BpQFbASoB/wHqAdMBvgH/AeoB1AG/Af8B6gHUAb8B/wHqAdQBvgH/AeoB1AG+
        Af8B6gHUAb4B/wHpAdMBvgH/AekB0wG+Af8B6QHTAb4B/wHpAdMBvgH/AekB0wG+Af8B6AHPAbgB/wGQ
        AWUBNAH+FAABNwFoAVIB9wFCAbkBqgH/AUEBZgFfAfMBPwFlAV4B9AE7AlkB9QE3AWkBUgH3ATUCXAH4
        ASUBVAFNAfoBNAFiAWAB9gFTAcMBtQH/ATgCXAH4gAADZAHsA70B/wGmAWIBNgH/AaUBWwErAf8BpQFb
        ASsB/wGlAVsBKwH/AaUBWwErAf8BpQFbASsB/wGkAVsBKgH/AaQBWwEqAf8BpAFbASoB/wGkAVsBKgH/
        AaQBWgEpAf8BpAFaASkB/wGkAVoBKQH/AWQBXwFdAeAUAAE3AWgBUgH3AUwBvQGvAf8BXgHIAboB/wFx
        Ac4BwwH/AY0B1QHLAf8BnAHbAdIB/wGfAdsB0wH/AZQB1wHOAf8BhQHSAccB/wFpAcwBwAH/ATkBbAFg
        AfeAAANhAe4BwALBAf8DrAH/A6oB/wOnAf8DpQH/A6QB/wOkAf8DrAH/A7YB/wO5Af8DuwH/A6IB/wNS
        AakcAAE3AWgBUgH3AWwBygG/Af8BiQHTAckB/wGnAd8B1wH/AcUB6gHkAf8B3wHzAfAB/wHsAfgB9gH/
        AdkB8QHuAf8BvAHmAeEB/wGyAeIB3AH/ATYBYgFgAfaAAANiAe8DxQH/A7AB/wOtAf8DqwH/A6oB/wOs
        Af8DbwH1A28B8gNsAfIDbAHyA2wB8gNlAfYDSAGEHAABNwFoAVIB9wFPAbQBpwH/AYABxwG9Af8BmwHT
        AcsB/wGuAdwB1gH/AboB4QHbAf8BvQHjAd0B/wG2AeAB2gH/AaYB2QHSAf8BjgHQAcYB/wE5AW0BYAH3
        gAADYQHwA8kB/wPHAf8DxQH/A8QB/wPEAf8DtAH/A10BygMmATgDJgE4AyYBOAMmATgDJAE1AwIBAxwA
        A1EBoAFZAl0B0gFcAWABXAHUAVkCXQHXAVoCXgHYAVwBYQFeAdoBWAJeAd0BVwJcAd8BWwJfAeABWAFf
        AV0B4wFcAV4BXAHOgAADUQGfA2QB7ANkAewDZAHsA2QB7ANkAewDYQHiAyQBNf8A4QABQgFNAT4HAAE+
        AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wMAAYAfAAGABwAB+AF4BgAB+AF4BgAB+AF4BgAB+AcA
        AfgHAAH4BgABAwH4BgABAwH4BgABAwH4BgAD/wQABP8EAAs=
</value>
  </data>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>136, 17</value>
  </metadata>
  <metadata name="soundTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>252, 17</value>
  </metadata>
</root>